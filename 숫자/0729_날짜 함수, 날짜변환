--문제
--student 테이블에서 tel을 다음의 형식으로 출력
--055)381-2158=>055 381 2158

select *
  from student;
--055)381-2158 substr (055)381-2158,4,'')
--055)381-2158 substr (055)381-2158,8,'')

select tel, replace(replace(tel,')', ' '), '-',' '),      --조건이 두개니 replace 안에 replace
       translate(tel,')-','  ')                           --translate는 글자 치환이기 때문
   from student;
 
--참고 : select 절에서 *와 컬럼명을 동시에 나열하고자 할 경우
select s.*, name
   from student s;

--숫자 함수
--1. count(컬럼) :행의 수를 셈=숫자, 문자, 날짜 모두 셀 수 있음(데이터 타입 상관X)
     --null은 세지X (null의 입력이 허용되지 않는 단 하나의 컬럼으로 세는게 가장 정확하고 빠름).   
     --참고 : desc emp; 를 사용하여 empno이 절대 null을 허용하지 않는 것을 확인 가능
select count(*)
       count(empno),        --null의 입력이 허용되지 않는 단 하나의 컬럼으로 세는게 가장 정확하고 빠름
       count(ename),
       count(mgr),
       count(comm)
  from emp;             --emp table의 건수가 몇개야?
  
--2. sum(숫자 컬럼) : 총 합 (숫자 타입만 가능)
			    -- null을 무시
select sum(sal)         
  from emp;
 
select sum(sal), sal
  from emp;            --조회X(행의 수가 서로 다름-14건과 1건을 같이 출력 불가)
 
select sum(comm,sal) --출력 불가 => sum(comm), sum(sal)
  from emp;
  
--3. avg(숫자 컬럼)
--      null은 무시
select avg(sal), avg(comm)
  from emp;

select avg(comm),          -- null이 아닌 4명의 평균**
       sum(comm)/count(*), -- 전체(14명)의 평균
       avg(nvl(comm,0))    -- 전체(14명)의 평균 (comm이 null인 경우 0리턴)**
  from emp;
 
--4. min, max
--      null은 무시
select min(sal), max(sal)
  from emp;
 
--5. round, trunc
--round(숫자[,자리수])
-- 자리수 생략 시 소수점 첫 번째 자리에서 반올림, 정수로 리턴)
select round(12.567),
       round(12.567,1),      --리턴 할 자리를 알려주는 것=>12.6출력
       round(12.567,2),
       trunc(12.567),      
       trunc(12.567,1),
       trunc(12.567,2)      
  from dual;
 
--6.ceil, floor :정수값으로의 올림, 버림 (자리수 지정 불가)
--ceil(숫자)
--floor(숫자)
select ceil(12.12), -- 올림, 이 값보다 크면서 최소 정수
       floor(12.12) -- 내림, 이 값보다 작으면서 최대 정수
  from dual;

--문제
--emp 테이블에서 10번 부서 직원의 수와 10번 부서 직원의 평균 연봉을 구하고 
--평균 연봉은 소수점 둘째자리까지 표현
select count(empno) as "직원 수",
       round(avg(sal),2) as "평균 연봉"
  from emp
 where deptno=10;


--student 테이블에서 남학생의 수를 출력
desc student; =>확인
select count(name)      --(name) null이 아닌 값 중 하나 선택
  from student
 where substr(jumin,7,1) in ('1','3');
 
select count(name)
  from student
 where jumin like'______1%'
    or jumin like'______3%';
	 
--8. mod(나머지 구하는 함수)
-- mod(숫자1, 숫자2) : 숫자1을 숫자2로 나눈 나머지
select mod(7,3)
  from dual;
 
--9.  abs
-- abs(숫자) : 절대값 리턴
select abs(12.5), abs(-12.5), abs(0)
  from dual;
  
-- 10. sign
-- sign(숫자) : 숫자가 양수이면 1, 음수이면 -1, 0이면 0을 리턴
select sal, sign(sal)
  from emp;
  
--연산 조건은 where절 써야함
select sal>3000
  from emp;         --조회X
  
select ename, sal, '3000 이상'as 구분
  from emp
 where sal >= 3000
 union
select ename, sal, '3000 미만'  --where절의 조건을 만족하는 것에 '3000미만'문자열을 대입하고 싶다는 뜻
  from emp
 where sal < 3000;              --두 개 커리 합하는거 아직 안배움=>(union=select절이 똑같을 때만 사용 가능)
 
--sign을 사용해서 구분하는 방법
select sal, sign(sal-3000)
  from emp;                     --결과가 -1,0,1로 나오니 3000 미만, 3000, 이상을 알수있음

-- 문제
-- student 테이블에서 name, grade 학년여부 출력
-- 단, 학년 구분은 1, 2학년은 저학년, 3, 4학년은 고학년으로 출력
select name, grade, '고학년' as "학년 구분"
  from student
 where grade >= 3                   --or where grade in (1,2);
 union
select name, grade, '저학년'
  from student
 where grade < 3;                   --or where grade in (3,4);


-- professor 테이블에서 101번 학과 교수의 수, 평균 pay를 십의 자리에서 반올림하여
--아래와 같이 출력
-- 567.45 => 600
desc professor;

select count(profno) as "교수 수",
       round(avg(pay),-2) ||'만원' as "평균 월급"
  from professor
 where deptno=101;      --숫자 컬럼이기 때문에 숫자 그대로 써도 됨
 
-- 날짜 함수 -->기본 함수(day:숫자/+-만 가능)
--1. sysdate : 오늘의 날짜(시간) 출력, input값 없음
--2. add_months (날짜, n) : n개월 이후/이전
--n < 0이면 몇개월 이전 날짜 리턴
select sysdate,
       sysdate + 100 as "100일 후",
       sysdate - 100 as "100일 전",
       sysdate + 1/24 as "1시간 후",
       sysdate + 31 as "한 달 후 (부정확할 수 있음)",
       add_months(sysdate,1)
  from dual;
  
  
alter session set nls_date_format = 'YYYY/MM/DD';      --포맷 변경

--날짜연산
--날짜 + n : n일 이후
--날짜 - n : n일 이전
--적절한 숫자를 전달하여 year, hour 연산 가능
--날짜 - 날짜 : 두 날짜 사이의 일 수 리턴 ex)근무일수

select name, sysdate, hiredate,
       trunc(sysdate - hiredate) as "근무 일수",     --trunc씌우는 이유는 sysdate가 시간까지 출력 됨
       trunc(trunc(sysdate - hiredate)/365) as "근무 일수"
  from professor;       --개수 맞추기 위해 현시각(sysdate)이 14개의 hiredate에 맞춰 14개 출력 됨
  
  
--3. months_between!
--months_between(날짜1, 날짜2)
--더 큰 날짜를 먼저 작성
select trunc(months_between(sysdate, hiredate)) as "근무 개월 수"
  from professor;
  
--4. next_day : 돌아오는 특정 요일의 날짜 리턴 (가장 가까운 not 모든)
--next_day(날짜, 요일)
--요일은 다음의 세가지 경우로 전달 가능
    --1) 한글표현 : '월', '화', '수',...(날짜 언어가 한글일때 전달 가능)
    --2) 영문표현 : 'mon', 'tue', 'wed',...(날짜 언어가 영문일때 전달 가능)
    --3) 숫자표현 : 1(일요일), 2(월요일), 3(화요일),...
select sysdate, next_day(sysdate, '월'), next_day(sysdate, '화')
  from dual;

alter session set nls_date_language='american';     --영문으로 날짜를 지정할때 (지정어를 복수로 설정 못함)
select sysdate, next_day(sysdate, 'mon')
  from dual;
  
select sysdate, next_day(sysdate,2)
  from dual;

--문제 : 
--emp 테이블에서 현재까지 근무일수가 몇 주, 몇 일인가를 출력하여라.
--단, 근무일수가 많은 사람 순으로 출력하여라
select ename, sysdate, hiredate,
       trunc((sysdate-hiredate)/7) as "근무주수",
       trunc(sysdate-hiredate) as "근무일수"
    from EMP
   order by 근무일수 desc;

--5. last_day : 해당 월의 마지막 날짜 리턴 (30,31,29,28 다 다르잖앙)
--last_day(날짜)
select sysdate, last_day(sysdate)
    from dual;

--6. round / trunc : 날짜의 반올림/버림
-- round(날짜, 날짜자리수)
-- 날짜 자리수 생략 시 day 자리수로 맞추기 위해 hour 반올림 진행
select sysdate,
       round(sysdate),             	 -- day 자리수로 맞추기 위해 hour 반올림 진행
       round(sysdate, 'day'),       	-- day 자리수로 맞추기 위해 hour 반올림 진행 X
       round(sysdate, 'month'),    	-- month 자리수로 맞추기 위해 day 반올림 진행
       round(sysdate, 'year')       	-- year 자리수로 맞추기 위해 month 반올림 진행
    from dual;


--날짜 포맷 (문법 해석에서는 대소구분X/문자 출력 옵션에서는 구분해서 리턴)
--연도 : YYYY, YY
--월 : MM, MONTH
--일 : DD, DAY
--시간 : HH, HH24
--분 : MI
--초 : SS
 
  
--날짜 변환--
--1. 이미 날짜인 값의 포맷 변경
--to_char(날짜, 날짜포맷)
--날짜포맷 : 이미 날짜인 값의 출력 형식을 변경
--to_char로 변환된 값은 더이상 날짜가 아님!!!!!!!!!

select sysdate,
       to_char(sysdate, 'YYYY') as "year",
       to_char(sysdate, 'MM')as "month",
       to_char(sysdate, 'DD')as "day"
    from dual;
    
select sysdate,
       to_char(sysdate, 'MM-DD-YYYY')
    from dual;
    
 select sysdate,
       to_char(sysdate, 'MM-DD-YYYY')+100
    from dual;                 --조회X => to_char를 쓰는 순간 문자가 되기 때문에 연산(+100) 불가
    
    
select sysdate,
       to_char(sysdate, 'MONTH'),   --월
       to_char(sysdate, 'DAY'),     --요일
       to_char(sysdate, 'DDTH'),     --숫자서수
       to_char(sysdate, 'DDSPTH')   --문자서수
  from dual;


--2. 날짜가 아닌(날짜처럼 보이는 문자나 숫자) 값을 날짜로 인식
--to_date(문자 OR 숫자 [, 날짜포맷])
--날짜포맷 : 앞에 있는 날짜가 어떤 형신인지를 dbms에 알려주는 포맷
--생략 : YYYY/MM/DD 형식의 날짜 전달 시 생략해도 자동으로 날짜 인식 가능
--RR/MM/DD는 1900년대로 인식
select '75/12/05',
       to_date('75/12/05', 'YY/MM/DD'),       --2075/12/05 00:00;00
       to_date('75/12/05', 'RR/MM/DD'),      --1975/12/05 00:00;00
       to_date('1975/12/05', 'RR/MM/DD')   --1975/12/05 00:00;00
  from dual;  

select '2021/07/27' + 100
  from dual;            --조회X=>'2021/07/27'를 문자로 인식
  
select to_date('2021/07/27') + 100
  from dual;            --조회O=> to_date함수를 사용하여 날짜로 인식
  
select to_date('21/07/27', 'DD/MM/YY') 
  from dual;            --표현의 목적이 아닌 인식의 목적 SO 출력 결과는 원래 있던 데이터 포맷 형식
  
select to_date('21/07/27', 'DD/MM/YY'),     --날짜로 인식되면 해당 시스템(툴)의 기본 날짜포맷에 맞게 출력
       to_char(to_date('21/07/27', 'DD/MM/YY'), 'YY/MM/DD') --사용자가 강제로 이미 날짜인 출력 형식 변경
  from dual;  
 
 
-- TIP**
-- to_date(날짜를 쓸 수 없음)   
-- to_char(문자를 쓸 수 없음) 


연습문제

--1. EMP 테이블에서 10번 부서원의 입사 일자를 '1 MAY 1981' 형태로 변경  
desc emp;

select ename,deptno,
       hiredate as "입사일자",
       to_char(hiredate, 'DD MONTH YYYY') as "new_form"
  from emp
 where deptno=10;   --한자릿수 여도 'DD' <-이렇게 D 두개 써줘야됨                                      


-- 날짜의 한자리 월, 한자리 일을 숫자형식으로 변경하려면
-- 각각 날짜의 일부를 추출한 후 숫자로 변경하고 다시 결합
select ename, hiredate, to_number(to_char(hiredate, 'DD'))||' '||to_char(hiredate, 'MONTH YYYY')
  from emp
 where deptno = 10;
 
--2. EMP 테이블을 이용하여 사원이름, 입사일 및 
--급여검토일을 표시합니다. 
--급여검토일은 여섯달 근무후 해당되는 첫번째 월요일 
--날짜는 "Sunday the Seventh of September, 1981" 
select sysdate, to_char(sysdate, 'YYYY"년" MM"월" DD"일"')
  from dual;

select ename, hiredate,
       to_char(next_day(add_months(hiredate, 6),'mon'),
               'Day "the" Ddspth "of" Month, YYYY')
  from emp;
select to_char(hiredate,'day') from emp;

-- 영문으로 표기되는 날짜표현은 불필요한 공백이 포함될 수 있음
-- (요일의 경우 가장 긴 요일인 wednesday를 기준으로 하여 이보다 작은 글자는 뒤에 공백이 붙음)
-- 중간 공백을 삭제할 수는 없어서 아래와 같이 모두 개별적으로 분리, 공백 삭제 후 다시 결합해서 출력 가능
select ename, hiredate,
       trim(to_char(next_day(add_months(hiredate, 6),'mon'),
                    'Day'))||' the '||
       trim(to_char(next_day(add_months(hiredate, 6),'mon'),
                    'Ddspth'))||' of '||
       trim(to_char(next_day(add_months(hiredate, 6),'mon'),
                    'Month'))||', '||
       to_char(next_day(add_months(hiredate, 6),'mon'),
               'YYYY')             
  from emp;
 

--3. september 28, 1981에 입사한 사원의 이름, 업무, 입사일자를 출력하여라. 
--단, where절에 'september 28, 1981' 그대로 사용 (변경 X)
select *
  from EMP
 where hiredate = 'september 28, 1981';     --error,날짜와 문자가 비교 되었으므로 형식을 일치시킬 필요가 있다.

--1) hiredate => 문자
select ename, job, hiredate
  from emp
 where to_char(hiredate, 'month DD"," YYYY')='september 28, 1981';

--2) 'september 28, 1981' => 날짜 추천!!!where절: 컬럼을 가공하는 것 보단 상수를 가공하는 것이 더 좋음
select ename, job, hiredate
  from EMP
 where hiredate = to_date('september 28, 1981', 'month DD, YYYY');

select *
  from EMP
 where hiredate + 100; --왜 안됨?


--4. STUDENT 테이블을 사용하여 주민번호 컬럼만으로 생년월일의 요일을 출력
select *
  from student;

select jumin,
       substr(jumin,1,6) as "주민번호 앞자리",
       to_date(substr(jumin,1,6), 'YY MM DD') as "생년월일",        --2자리 연도에 대해 2000년대로 출력
       to_date(substr(jumin,1,6), 'RR MM DD') as "생년월일",        --2자리 연도에 대해 1900년대로 출력 
       to_char(to_date(substr(jumin,1,6), 'RR MM DD'),'Day') as "요일"
  from student;

--5. student 테이블에서 jumin 컬럼을 사용하여 
--생년월일이 다음 사이인 학생의 정보를 출력하세요.=====>OK!!!!!BUT 첫번째랑 두번째 출력 값이 똑같음
--(19760205 ~ 19760924)                             
select to_date(substr(jumin,1,6),'RR MM DD')
  from student;     --날짜 출력
  
select to_char(to_date(substr(jumin,1,6),'RR MM DD'), 'RRRRMMDD')
  from student;     --문자 출력
  
select *
  from student
 where to_char(to_date(substr(jumin,1,6),'RR MM DD'), 'RRRRMMDD') between '19760205' and '19760924';
 
  --문제 없이 출력되는 이유는 '19760205'가 년월일 형식이므로 자동 파싱이 됐기 때문이다. 
 --So 날짜로 바꾸기 위해 'to_date'써주는 것이 좋음 
 select *
  from student
 where to_date(substr(jumin,1,6),'RRMMDD') 
       between to_date('19760205', 'YYYYMMDD') and to_date ('19760924','YYYYMMDD');


--6. emp 테이블을 이용하여 현재까지 근무일수를 
--XX년 XX개월 XX일 형태로 출력하세요.
--400일 => 1년 1개월 4일 이런식..
--입사일 + 49개월 이후 날짜? 현재날짜와의 갭=> 나머지 근무 일 수
--풀이!!
select ename, sysdate, hiredate,
       trunc(sysdate-hiredate) as "근무 일수",
       trunc(trunc(sysdate-hiredate)/365) as 근무연수1,        --윤달 포함 여부에 따라 달라질 수 있음
       trunc(months_between(sysdate, hiredate)) as 근무개월수,
       trunc(trunc(months_between(sysdate, hiredate))/12) as 근속연수2,
       mod(trunc(months_between(sysdate, hiredate)),12) as "나머지 근무 개월 수",
       add_months(hiredate,                                                            --기준일
                  trunc(months_between(sysdate, hiredate))) as "미래일수", --근무개월수만큼 더하기
       trunc(sysdate - add_months(hiredate, trunc(months_between(sysdate, hiredate)))) as "나머지 근무 일 수"
   from emp;
   
       

--1. emp 테이블에서 각 직원의 입사요일을 출력.
select ename, hiredate,
       to_char(hiredate,'Day') as "입사요일"
   from emp;

--2. emp 테이블에서 각 직원의 입사일로부터 3개월 뒤 날짜를 다음의 형태로 출력
--2021년 7월 29일이면 => 07/29, 2021
select ename, hiredate,
       add_months(hiredate,3) as "3개월 후 날짜",
       to_char(add_months(hiredate,3), 'MM/DD, YYYY') as "new_입사일+3개월"
   from emp;

  
--3. emp 테이블에서 각 직원이 입사한 첫 달에 근무한 근무일수 출력
--단, 토,일,공휴일 모두 근무했다 가정
select hiredate as "입사 날",
       to_char(add_months(hiredate,1),'YYYY/MM/"01"') as "다음 달 1일",
       to_date(to_char(add_months(hiredate,1),'YYYY/MM/"01"'),'YYYY MM DD')-hiredate as "입사한 첫 달에 근무한 근무일수"
  from emp;
  
  --입사일 부터 그다음 달 전까지
  
select ename, hiredate, last_day(hiredate),
       last_day(hiredate)-hiredate 
  from emp;
  

--4. 2021/08/01로부터 50일 뒤 날짜를 출력
select to_date('2021/08/01','YYYY/MM/DD')+50 as "날짜"
  from dual;

